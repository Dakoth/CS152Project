Terminals unused in grammar

   FOR


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   10 identifiers: IDENT COMMA identifiers
   11            | IDENT

   12 statements: statement SEMICOLON statements
   13           | statement SEMICOLON

   14 statement: variable ASSIGN expression
   15          | IF boolean_expression THEN statements ENDIF
   16          | IF boolean_expression THEN statements ELSE statements ENDIF
   17          | WHILE boolean_expression BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE boolean_expression
   19          | READ variables
   20          | WRITE variables
   21          | CONTINUE
   22          | RETURN expression

   23 variables: variable COMMA variables
   24          | variable

   25 variable: IDENT
   26         | IDENT R_SQUARE_BRACKET expression L_SQUARE_BRACKET

   27 boolean_expression: multiple-relation-and-expression

   28 multiple-relation-and-expression: relation-and-expression OR multiple-relation-and-expression
   29                                 | relation-and-expression

   30 relation-and-expression: multiple-relation-expression

   31 multiple-relation-expression: relation_expression AND multiple-relation-expression
   32                             | relation_expression

   33 relation_expression: expression comp expression
   34                    | TRUE
   35                    | FALSE
   36                    | L_PAREN boolean_expression R_PAREN
   37                    | NOT expression comp expression
   38                    | NOT TRUE
   39                    | NOT FALSE
   40                    | NOT L_PAREN boolean_expression R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | LTE
   45     | GT
   46     | GTE

   47 expressions: %empty
   48            | expression COMMA expressions
   49            | expression

   50 expression: multiplicative_expression multiplicative_expressions

   51 multiplicative_expressions: %empty
   52                           | ADD multiplicative_expression multiplicative_expressions
   53                           | SUB multiplicative_expression multiplicative_expressions

   54 multiplicative_expression: term terms

   55 terms: %empty
   56      | MULT term terms
   57      | DIV term terms
   58      | MOD term terms

   59 term: variable
   60     | NUMBER
   61     | L_PAREN expression R_PAREN
   62     | SUB variable
   63     | SUB NUMBER
   64     | SUB L_PAREN expression R_PAREN
   65     | IDENT L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
OF (267) 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
FOR (273)
DO (274) 18
BEGINLOOP (275) 17 18
ENDLOOP (276) 17 18
CONTINUE (277) 21
READ (278) 19
WRITE (279) 20
TRUE (280) 34 38
FALSE (281) 35 39
SEMICOLON (282) 4 6 12 13
COLON (283) 7 8 9
COMMA (284) 10 23 48
L_PAREN (285) 9 36 40 61 64 65
R_PAREN (286) 9 36 40 61 64 65
L_SQUARE_BRACKET (287) 8 26
R_SQUARE_BRACKET (288) 8 26
ASSIGN (289) 14
RETURN (290) 22
ENUM (291) 9
IDENT (292) 4 10 11 25 26 65
NUMBER (293) 8 60 63
OR (294) 28
AND (295) 31
NOT (296) 37 38 39 40
LT (297) 43
LTE (298) 44
GT (299) 45
GTE (300) 46
EQ (301) 41
NEQ (302) 42
ADD (303) 52
SUB (304) 53 62 63 64
MULT (305) 56
DIV (306) 57
MOD (307) 58


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
identifiers (59)
    on left: 10 11, on right: 7 8 9 10
statements (60)
    on left: 12 13, on right: 4 12 15 16 17 18
statement (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
variables (62)
    on left: 23 24, on right: 19 20 23
variable (63)
    on left: 25 26, on right: 14 23 24 59 62
boolean_expression (64)
    on left: 27, on right: 15 16 17 18 36 40
multiple-relation-and-expression (65)
    on left: 28 29, on right: 27 28
relation-and-expression (66)
    on left: 30, on right: 28 29
multiple-relation-expression (67)
    on left: 31 32, on right: 30 31
relation_expression (68)
    on left: 33 34 35 36 37 38 39 40, on right: 31 32
comp (69)
    on left: 41 42 43 44 45 46, on right: 33 37
expressions (70)
    on left: 47 48 49, on right: 48 65
expression (71)
    on left: 50, on right: 14 22 26 33 37 48 49 61 64
multiplicative_expressions (72)
    on left: 51 52 53, on right: 50 52 53
multiplicative_expression (73)
    on left: 54, on right: 50 52 53
terms (74)
    on left: 55 56 57 58, on right: 54 56 57 58
term (75)
    on left: 59 60 61 62 63 64 65, on right: 54 56 57 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13


State 10

   10 identifiers: IDENT . COMMA identifiers
   11            | IDENT .

    COMMA  shift, and go to state 14

    $default  reduce using rule 11 (identifiers)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 17


State 14

   10 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   10 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 26


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 26

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 10

    identifiers  go to state 29


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 29

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 32


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements  go to state 41
    statement   go to state 42
    variable    go to state 43


State 31

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 32

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 33

   15 statement: IF . boolean_expression THEN statements ENDIF
   16          | IF . boolean_expression THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    boolean_expression                go to state 53
    multiple-relation-and-expression  go to state 54
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 58
    multiplicative_expression         go to state 59
    term                              go to state 60


State 34

   17 statement: WHILE . boolean_expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    boolean_expression                go to state 61
    multiple-relation-and-expression  go to state 54
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 58
    multiplicative_expression         go to state 59
    term                              go to state 60


State 35

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolean_expression

    BEGINLOOP  shift, and go to state 62


State 36

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 37

   19 statement: READ . variables

    IDENT  shift, and go to state 40

    variables  go to state 63
    variable   go to state 64


State 38

   20 statement: WRITE . variables

    IDENT  shift, and go to state 40

    variables  go to state 65
    variable   go to state 64


State 39

   22 statement: RETURN . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 67
    multiplicative_expression  go to state 59
    term                       go to state 60


State 40

   25 variable: IDENT .
   26         | IDENT . R_SQUARE_BRACKET expression L_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 25 (variable)


State 41

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


State 42

   12 statements: statement . SEMICOLON statements
   13           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 43

   14 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 44

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   34 relation_expression: TRUE .

    $default  reduce using rule 34 (relation_expression)


State 46

   35 relation_expression: FALSE .

    $default  reduce using rule 35 (relation_expression)


State 47

   36 relation_expression: L_PAREN . boolean_expression R_PAREN
   61 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    boolean_expression                go to state 73
    multiple-relation-and-expression  go to state 54
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 74
    multiplicative_expression         go to state 59
    term                              go to state 60


State 48

   25 variable: IDENT .
   26         | IDENT . R_SQUARE_BRACKET expression L_SQUARE_BRACKET
   65 term: IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 75
    R_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 25 (variable)


State 49

   60 term: NUMBER .

    $default  reduce using rule 60 (term)


State 50

   37 relation_expression: NOT . expression comp expression
   38                    | NOT . TRUE
   39                    | NOT . FALSE
   40                    | NOT . L_PAREN boolean_expression R_PAREN

    TRUE     shift, and go to state 76
    FALSE    shift, and go to state 77
    L_PAREN  shift, and go to state 78
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 79
    multiplicative_expression  go to state 59
    term                       go to state 60


State 51

   62 term: SUB . variable
   63     | SUB . NUMBER
   64     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 80
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 81

    variable  go to state 82


State 52

   59 term: variable .

    $default  reduce using rule 59 (term)


State 53

   15 statement: IF boolean_expression . THEN statements ENDIF
   16          | IF boolean_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 83


State 54

   27 boolean_expression: multiple-relation-and-expression .

    $default  reduce using rule 27 (boolean_expression)


State 55

   28 multiple-relation-and-expression: relation-and-expression . OR multiple-relation-and-expression
   29                                 | relation-and-expression .

    OR  shift, and go to state 84

    $default  reduce using rule 29 (multiple-relation-and-expression)


State 56

   30 relation-and-expression: multiple-relation-expression .

    $default  reduce using rule 30 (relation-and-expression)


State 57

   31 multiple-relation-expression: relation_expression . AND multiple-relation-expression
   32                             | relation_expression .

    AND  shift, and go to state 85

    $default  reduce using rule 32 (multiple-relation-expression)


State 58

   33 relation_expression: expression . comp expression

    LT   shift, and go to state 86
    LTE  shift, and go to state 87
    GT   shift, and go to state 88
    GTE  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    comp  go to state 92


State 59

   50 expression: multiplicative_expression . multiplicative_expressions

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 51 (multiplicative_expressions)

    multiplicative_expressions  go to state 95


State 60

   54 multiplicative_expression: term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 55 (terms)

    terms  go to state 99


State 61

   17 statement: WHILE boolean_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 62

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolean_expression

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements  go to state 101
    statement   go to state 42
    variable    go to state 43


State 63

   19 statement: READ variables .

    $default  reduce using rule 19 (statement)


State 64

   23 variables: variable . COMMA variables
   24          | variable .

    COMMA  shift, and go to state 102

    $default  reduce using rule 24 (variables)


State 65

   20 statement: WRITE variables .

    $default  reduce using rule 20 (statement)


State 66

   61 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 103
    multiplicative_expression  go to state 59
    term                       go to state 60


State 67

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 68

   26 variable: IDENT R_SQUARE_BRACKET . expression L_SQUARE_BRACKET

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 104
    multiplicative_expression  go to state 59
    term                       go to state 60


State 69

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 70

   12 statements: statement SEMICOLON . statements
   13           | statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 13 (statements)

    statements  go to state 105
    statement   go to state 42
    variable    go to state 43


State 71

   14 statement: variable ASSIGN . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 106
    multiplicative_expression  go to state 59
    term                       go to state 60


State 72

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   36 relation_expression: L_PAREN boolean_expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 74

   33 relation_expression: expression . comp expression
   61 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108
    LT       shift, and go to state 86
    LTE      shift, and go to state 87
    GT       shift, and go to state 88
    GTE      shift, and go to state 89
    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91

    comp  go to state 92


State 75

   65 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    $default  reduce using rule 47 (expressions)

    variable                   go to state 52
    expressions                go to state 109
    expression                 go to state 110
    multiplicative_expression  go to state 59
    term                       go to state 60


State 76

   38 relation_expression: NOT TRUE .

    $default  reduce using rule 38 (relation_expression)


State 77

   39 relation_expression: NOT FALSE .

    $default  reduce using rule 39 (relation_expression)


State 78

   40 relation_expression: NOT L_PAREN . boolean_expression R_PAREN
   61 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    boolean_expression                go to state 111
    multiple-relation-and-expression  go to state 54
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 74
    multiplicative_expression         go to state 59
    term                              go to state 60


State 79

   37 relation_expression: NOT expression . comp expression

    LT   shift, and go to state 86
    LTE  shift, and go to state 87
    GT   shift, and go to state 88
    GTE  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    comp  go to state 112


State 80

   64 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 113
    multiplicative_expression  go to state 59
    term                       go to state 60


State 81

   63 term: SUB NUMBER .

    $default  reduce using rule 63 (term)


State 82

   62 term: SUB variable .

    $default  reduce using rule 62 (term)


State 83

   15 statement: IF boolean_expression THEN . statements ENDIF
   16          | IF boolean_expression THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements  go to state 114
    statement   go to state 42
    variable    go to state 43


State 84

   28 multiple-relation-and-expression: relation-and-expression OR . multiple-relation-and-expression

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    multiple-relation-and-expression  go to state 115
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 58
    multiplicative_expression         go to state 59
    term                              go to state 60


State 85

   31 multiple-relation-expression: relation_expression AND . multiple-relation-expression

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                      go to state 52
    multiple-relation-expression  go to state 116
    relation_expression           go to state 57
    expression                    go to state 58
    multiplicative_expression     go to state 59
    term                          go to state 60


State 86

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 87

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


State 88

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 89

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 90

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 91

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 92

   33 relation_expression: expression comp . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 117
    multiplicative_expression  go to state 59
    term                       go to state 60


State 93

   52 multiplicative_expressions: ADD . multiplicative_expression multiplicative_expressions

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    multiplicative_expression  go to state 118
    term                       go to state 60


State 94

   53 multiplicative_expressions: SUB . multiplicative_expression multiplicative_expressions

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    multiplicative_expression  go to state 119
    term                       go to state 60


State 95

   50 expression: multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 50 (expression)


State 96

   56 terms: MULT . term terms

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable  go to state 52
    term      go to state 120


State 97

   57 terms: DIV . term terms

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable  go to state 52
    term      go to state 121


State 98

   58 terms: MOD . term terms

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable  go to state 52
    term      go to state 122


State 99

   54 multiplicative_expression: term terms .

    $default  reduce using rule 54 (multiplicative_expression)


State 100

   17 statement: WHILE boolean_expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements  go to state 123
    statement   go to state 42
    variable    go to state 43


State 101

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolean_expression

    ENDLOOP  shift, and go to state 124


State 102

   23 variables: variable COMMA . variables

    IDENT  shift, and go to state 40

    variables  go to state 125
    variable   go to state 64


State 103

   61 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 104

   26 variable: IDENT R_SQUARE_BRACKET expression . L_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 126


State 105

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 106

   14 statement: variable ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 107

   36 relation_expression: L_PAREN boolean_expression R_PAREN .

    $default  reduce using rule 36 (relation_expression)


State 108

   61 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 109

   65 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 110

   48 expressions: expression . COMMA expressions
   49            | expression .

    COMMA  shift, and go to state 128

    $default  reduce using rule 49 (expressions)


State 111

   40 relation_expression: NOT L_PAREN boolean_expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 112

   37 relation_expression: NOT expression comp . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    variable                   go to state 52
    expression                 go to state 130
    multiplicative_expression  go to state 59
    term                       go to state 60


State 113

   64 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 114

   15 statement: IF boolean_expression THEN statements . ENDIF
   16          | IF boolean_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 132
    ELSE   shift, and go to state 133


State 115

   28 multiple-relation-and-expression: relation-and-expression OR multiple-relation-and-expression .

    $default  reduce using rule 28 (multiple-relation-and-expression)


State 116

   31 multiple-relation-expression: relation_expression AND multiple-relation-expression .

    $default  reduce using rule 31 (multiple-relation-expression)


State 117

   33 relation_expression: expression comp expression .

    $default  reduce using rule 33 (relation_expression)


State 118

   52 multiplicative_expressions: ADD multiplicative_expression . multiplicative_expressions

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 51 (multiplicative_expressions)

    multiplicative_expressions  go to state 134


State 119

   53 multiplicative_expressions: SUB multiplicative_expression . multiplicative_expressions

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 51 (multiplicative_expressions)

    multiplicative_expressions  go to state 135


State 120

   56 terms: MULT term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 55 (terms)

    terms  go to state 136


State 121

   57 terms: DIV term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 55 (terms)

    terms  go to state 137


State 122

   58 terms: MOD term . terms

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 55 (terms)

    terms  go to state 138


State 123

   17 statement: WHILE boolean_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 124

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolean_expression

    WHILE  shift, and go to state 140


State 125

   23 variables: variable COMMA variables .

    $default  reduce using rule 23 (variables)


State 126

   26 variable: IDENT R_SQUARE_BRACKET expression L_SQUARE_BRACKET .

    $default  reduce using rule 26 (variable)


State 127

   65 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 65 (term)


State 128

   48 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 51

    $default  reduce using rule 47 (expressions)

    variable                   go to state 52
    expressions                go to state 141
    expression                 go to state 110
    multiplicative_expression  go to state 59
    term                       go to state 60


State 129

   40 relation_expression: NOT L_PAREN boolean_expression R_PAREN .

    $default  reduce using rule 40 (relation_expression)


State 130

   37 relation_expression: NOT expression comp expression .

    $default  reduce using rule 37 (relation_expression)


State 131

   64 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (term)


State 132

   15 statement: IF boolean_expression THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 133

   16 statement: IF boolean_expression THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements  go to state 142
    statement   go to state 42
    variable    go to state 43


State 134

   52 multiplicative_expressions: ADD multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 52 (multiplicative_expressions)


State 135

   53 multiplicative_expressions: SUB multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 53 (multiplicative_expressions)


State 136

   56 terms: MULT term terms .

    $default  reduce using rule 56 (terms)


State 137

   57 terms: DIV term terms .

    $default  reduce using rule 57 (terms)


State 138

   58 terms: MOD term terms .

    $default  reduce using rule 58 (terms)


State 139

   17 statement: WHILE boolean_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 140

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolean_expression

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    NOT      shift, and go to state 50
    SUB      shift, and go to state 51

    variable                          go to state 52
    boolean_expression                go to state 143
    multiple-relation-and-expression  go to state 54
    relation-and-expression           go to state 55
    multiple-relation-expression      go to state 56
    relation_expression               go to state 57
    expression                        go to state 58
    multiplicative_expression         go to state 59
    term                              go to state 60


State 141

   48 expressions: expression COMMA expressions .

    $default  reduce using rule 48 (expressions)


State 142

   16 statement: IF boolean_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 144


State 143

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE boolean_expression .

    $default  reduce using rule 18 (statement)


State 144

   16 statement: IF boolean_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
